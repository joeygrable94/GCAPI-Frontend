// This file is auto-generated by @hey-api/openapi-ts

export type BdxFeedCreate = {
  username: string;
  password: string;
  serverhost: string;
  xml_file_key: string;
  client_id: string;
};

export type BdxFeedRead = {
  id: string;
  created: string;
  updated: string;
  username: string;
  password: string;
  serverhost: string;
  xml_file_key: string;
  client_id: string;
};

export type BdxFeedUpdate = {
  username?: string | null;
  password?: string | null;
  serverhost?: string | null;
  client_id?: string | null;
};

export type ClientCreate = {
  slug: string;
  title: string;
  description?: string | null;
  is_active?: boolean;
};

export type ClientDelete = {
  message: string;
  user_id: string;
  client_id: string;
  task_id?: string | unknown | null;
};

export type ClientRead = {
  id: string;
  created: string;
  updated: string;
  slug: string;
  title: string;
  description?: string | null;
  is_active?: boolean;
};

export type ClientReportCreate = {
  title: string;
  url: string;
  description?: string | null;
  keys?: string | null;
  client_id: string;
};

export type ClientReportRead = {
  id: string;
  created: string;
  updated: string;
  title: string;
  url: string;
  description?: string | null;
  keys?: string | null;
  client_id: string;
};

export type ClientReportUpdate = {
  title?: string | null;
  url?: string | null;
  description?: string | null;
  keys?: string | null;
  client_id?: string | null;
  created?: string | null;
};

export type ClientUpdate = {
  title?: string | null;
  description?: string | null;
  is_active?: boolean | null;
};

export type ClientWebsiteCreate = {
  client_id: string;
  website_id: string;
};

export type ClientWebsiteRead = {
  id: string;
  created: string;
  updated: string;
  client_id: string;
  website_id: string;
};

export type CsrfToken = {
  csrf_token: string;
};

export type EncryptedMessage = {
  message: string;
};

export type ErrorModel = {
  detail:
    | string
    | {
        [key: string]: string;
      };
};

export type GoAnalytics4PropertyCreate = {
  title: string;
  measurement_id: string;
  property_id: string;
  client_id: string;
};

export type GoAnalytics4PropertyRead = {
  id: string;
  created: string;
  updated: string;
  title: string;
  measurement_id: string;
  property_id: string;
  client_id: string;
};

export type GoAnalytics4PropertyUpdate = {
  title?: string | null;
  client_id?: string | null;
};

export type GoAnalytics4StreamCreate = {
  title: string;
  stream_id: string;
  ga4_id: string;
  website_id: string;
};

export type GoAnalytics4StreamRead = {
  id: string;
  created: string;
  updated: string;
  title: string;
  stream_id: string;
  ga4_id: string;
  website_id: string;
};

export type GoAnalytics4StreamUpdate = {
  title?: string | null;
  website_id?: string | null;
};

export type GoCloudPropertyCreate = {
  project_name: string;
  project_id: string;
  project_number: string;
  service_account?: string | null;
  client_id: string;
};

export type GoCloudPropertyRead = {
  id: string;
  created: string;
  updated: string;
  project_name: string;
  project_id: string;
  project_number: string;
  service_account?: string | null;
  client_id: string;
};

export type GoCloudPropertyUpdate = {
  project_name?: string | null;
  service_account?: string | null;
  client_id?: string | null;
};

export type GoSearchConsoleMetricCreate = {
  title: string;
  keys: string;
  clicks: number;
  impressions: number;
  ctr: number;
  position: number;
  date_start: string;
  date_end: string;
  gsc_id: string;
};

export type GoSearchConsoleMetricPages = {
  searchappearance?: Paginated_GoSearchConsoleMetricRead_ | null;
  query?: Paginated_GoSearchConsoleMetricRead_ | null;
  page?: Paginated_GoSearchConsoleMetricRead_ | null;
  device?: Paginated_GoSearchConsoleMetricRead_ | null;
  country?: Paginated_GoSearchConsoleMetricRead_ | null;
};

export type GoSearchConsoleMetricRead = {
  id: string;
  created: string;
  updated: string;
  title: string;
  keys: string;
  clicks: number;
  impressions: number;
  ctr: number;
  position: number;
  date_start: string;
  date_end: string;
  gsc_id: string;
};

export type GoSearchConsoleMetricType =
  | 'searchappearance'
  | 'query'
  | 'page'
  | 'device'
  | 'country';

export const GoSearchConsoleMetricType = {
  SEARCHAPPEARANCE: 'searchappearance',
  QUERY: 'query',
  PAGE: 'page',
  DEVICE: 'device',
  COUNTRY: 'country'
} as const;

export type GoSearchConsoleMetricUpdate = {
  title?: string | null;
  keys?: string | null;
  clicks?: number | null;
  impressions?: number | null;
  ctr?: number | null;
  position?: number | null;
  date_start?: string | null;
  date_end?: string | null;
};

export type GoSearchConsolePropertyCreate = {
  title: string;
  client_id: string;
  website_id: string;
};

export type GoSearchConsolePropertyRead = {
  id: string;
  created: string;
  updated: string;
  title: string;
  client_id: string;
  website_id: string;
};

export type GoSearchConsolePropertyUpdate = {
  title?: string | null;
  client_id?: string | null;
  website_id?: string | null;
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type NoteCreate = {
  title: string;
  description?: string | null;
  is_active?: boolean;
  user_id: string;
};

export type NoteRead = {
  id: string;
  created: string;
  updated: string;
  title: string;
  description?: string | null;
  is_active?: boolean;
  user_id: string;
};

export type NoteUpdate = {
  title?: string | null;
  description?: string | null;
  is_active?: boolean | null;
};

export type Paginated_BdxFeedRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<BdxFeedRead>;
};

export type Paginated_ClientRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<ClientRead>;
};

export type Paginated_ClientReportRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<ClientReportRead>;
};

export type Paginated_GoAnalytics4PropertyRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<GoAnalytics4PropertyRead>;
};

export type Paginated_GoAnalytics4StreamRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<GoAnalytics4StreamRead>;
};

export type Paginated_GoCloudPropertyRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<GoCloudPropertyRead>;
};

export type Paginated_GoSearchConsoleMetricRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<GoSearchConsoleMetricRead>;
};

export type Paginated_GoSearchConsolePropertyRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<GoSearchConsolePropertyRead>;
};

export type Paginated_NoteRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<NoteRead>;
};

export type Paginated_SharpspringRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<SharpspringRead>;
};

export type Paginated_UserReadAsAdmin_ = {
  total: number;
  page: number;
  size: number;
  results: Array<UserReadAsAdmin>;
};

export type Paginated_UserReadAsManager_ = {
  total: number;
  page: number;
  size: number;
  results: Array<UserReadAsManager>;
};

export type Paginated_WebsiteKeywordCorpusRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<WebsiteKeywordCorpusRead>;
};

export type Paginated_WebsiteMapRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<WebsiteMapRead>;
};

export type Paginated_WebsitePageRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<WebsitePageRead>;
};

export type Paginated_WebsitePageSpeedInsightsRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<WebsitePageSpeedInsightsRead>;
};

export type Paginated_WebsiteRead_ = {
  total: number;
  page: number;
  size: number;
  results: Array<WebsiteRead>;
};

export type PlainMessage = {
  message: string;
};

export type SharpspringCreate = {
  api_key: string;
  secret_key: string;
  client_id: string;
};

export type SharpspringRead = {
  id: string;
  created: string;
  updated: string;
  api_key: string;
  secret_key: string;
  client_id: string;
};

export type SharpspringUpdate = {
  api_key?: string | null;
  secret_key?: string | null;
  client_id?: string | null;
};

/**
 * Change frequency of a sitemap URL.
 */
export type SitemapPageChangeFrequency =
  | 'always'
  | 'hourly'
  | 'daily'
  | 'weekly'
  | 'monthly'
  | 'yearly'
  | 'never';

/**
 * Change frequency of a sitemap URL.
 */
export const SitemapPageChangeFrequency = {
  ALWAYS: 'always',
  HOURLY: 'hourly',
  DAILY: 'daily',
  WEEKLY: 'weekly',
  MONTHLY: 'monthly',
  YEARLY: 'yearly',
  NEVER: 'never'
} as const;

export type TaskState = {
  task_id: string;
  task_status?: TaskStatus;
  task_time?: number | null;
  task_result?: unknown | null;
};

export type TaskStatus = 'PENDING' | 'SUCCESS' | 'ERROR';

export const TaskStatus = {
  PENDING: 'PENDING',
  SUCCESS: 'SUCCESS',
  ERROR: 'ERROR'
} as const;

export type UserClientCreate = {
  user_id: string;
  client_id: string;
};

export type UserClientRead = {
  id: string;
  created: string;
  updated: string;
  user_id: string;
  client_id: string;
};

export type UserRead = {
  id: string;
  created: string;
  updated: string;
  auth_id: string;
  email: string;
  username: string;
  picture: string;
};

export type UserReadAsAdmin = {
  id: string;
  created: string;
  updated: string;
  auth_id: string;
  email: string;
  username: string;
  picture: string;
  is_active: boolean;
  is_verified: boolean;
  is_superuser: boolean;
  scopes: Array<string>;
};

export type UserReadAsManager = {
  id: string;
  created: string;
  updated: string;
  auth_id: string;
  email: string;
  username: string;
  picture: string;
  is_active: boolean;
  is_verified: boolean;
  scopes: Array<string>;
};

export type UserUpdate = {
  username?: string | null;
  picture?: string | null;
};

export type UserUpdateAsAdmin = {
  username?: string | null;
  picture?: string | null;
  is_active?: boolean | null;
  is_verified?: boolean | null;
  is_superuser?: boolean | null;
};

export type UserUpdateAsManager = {
  username?: string | null;
  picture?: string | null;
  is_active?: boolean | null;
  is_verified?: boolean | null;
};

export type UserUpdatePrivileges = {
  scopes?: Array<string> | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type WebsiteCreate = {
  domain: string;
  is_secure?: boolean;
  is_active?: boolean;
};

export type WebsiteKeywordCorpusCreate = {
  corpus: string;
  rawtext: string;
  website_id: string;
  page_id: string;
};

export type WebsiteKeywordCorpusRead = {
  id: string;
  created: string;
  updated: string;
  corpus: string;
  rawtext: string;
  website_id: string;
  page_id: string;
};

export type WebsiteMapCreate = {
  url: string;
  is_active?: boolean;
  website_id: string;
};

export type WebsiteMapProcessing = {
  url: string;
  website_id: string;
  sitemap_id: string;
  task_id?: string | null;
};

export type WebsiteMapRead = {
  id: string;
  created: string;
  updated: string;
  url: string;
  is_active?: boolean;
  website_id: string;
};

export type WebsiteMapUpdate = {
  url?: string | null;
  is_active?: boolean | null;
};

export type WebsitePageCreate = {
  url: string;
  status: number;
  priority: number | string;
  last_modified?: string | null;
  change_frequency?: SitemapPageChangeFrequency | null;
  is_active?: boolean;
  website_id: string;
  sitemap_id?: string | null;
};

export type WebsitePagePSIProcessing = {
  page: WebsitePageRead;
  psi_mobile_task_id: string | unknown | null;
  psi_desktop_task_id: string | unknown | null;
};

export type WebsitePageRead = {
  id: string;
  created: string;
  updated: string;
  url: string;
  status: number;
  priority: number | string;
  last_modified?: string | null;
  change_frequency?: SitemapPageChangeFrequency | null;
  is_active: boolean;
  website_id: string;
  sitemap_id?: string | null;
};

export type WebsitePageSpeedInsightsBase = {
  strategy: string;
  ps_weight: number;
  ps_grade: number;
  ps_value: string;
  ps_unit: string;
  fcp_weight: number;
  fcp_grade: number;
  fcp_value: number;
  fcp_unit: string;
  lcp_weight: number;
  lcp_grade: number;
  lcp_value: number;
  lcp_unit: string;
  cls_weight: number;
  cls_grade: number;
  cls_value: number;
  cls_unit: string;
  si_weight: number;
  si_grade: number;
  si_value: number;
  si_unit: string;
  tbt_weight: number;
  tbt_grade: number;
  tbt_value: number;
  tbt_unit: string;
};

export type WebsitePageSpeedInsightsRead = {
  id: string;
  created: string;
  updated: string;
  strategy: string;
  ps_weight: number;
  ps_grade: number;
  ps_value: string;
  ps_unit: string;
  fcp_weight: number;
  fcp_grade: number;
  fcp_value: number;
  fcp_unit: string;
  lcp_weight: number;
  lcp_grade: number;
  lcp_value: number;
  lcp_unit: string;
  cls_weight: number;
  cls_grade: number;
  cls_value: number;
  cls_unit: string;
  si_weight: number;
  si_grade: number;
  si_value: number;
  si_unit: string;
  tbt_weight: number;
  tbt_grade: number;
  tbt_value: number;
  tbt_unit: string;
  page_id: string;
  website_id: string;
};

export type WebsitePageUpdate = {
  url?: string | null;
  status?: number | null;
  priority?: number | string | null;
  last_modified?: string | null;
  change_frequency?: SitemapPageChangeFrequency | null;
  is_active?: boolean | null;
  website_id?: string | null;
  sitemap_id?: string | null;
};

export type WebsiteRead = {
  id: string;
  created: string;
  updated: string;
  domain: string;
  is_secure?: boolean;
  is_active?: boolean;
};

export type WebsiteUpdate = {
  domain?: string | null;
  is_secure?: boolean | null;
  is_active?: boolean | null;
};

export type PublicStatusApiV1StatusGetData = {
  query?: {
    message?: string | null;
  };
};

export type PublicStatusApiV1StatusGetResponse = {
  [key: string]: unknown;
};

export type PublicStatusApiV1StatusGetError = unknown;

export type PublicRateLimitedMultipleApiV1RateLimitedMultipleGetData = {
  query?: {
    message?: string | null;
  };
};

export type PublicRateLimitedMultipleApiV1RateLimitedMultipleGetResponse = {
  [key: string]: unknown;
};

export type PublicRateLimitedMultipleApiV1RateLimitedMultipleGetError = unknown;

export type SecureTestSecurityScopeApiV1TestScopeGetResponse = unknown;

export type SecureTestSecurityScopeApiV1TestScopeGetError = unknown;

export type SecureGetCsrfApiV1CsrfGetResponse = CsrfToken;

export type SecureGetCsrfApiV1CsrfGetError = unknown;

export type SecureCheckCsrfApiV1CsrfPostResponse = unknown;

export type SecureCheckCsrfApiV1CsrfPostError = unknown;

export type SecureSecureEncryptMessageApiV1EncryptMessagePostData = {
  body: PlainMessage;
};

export type SecureSecureEncryptMessageApiV1EncryptMessagePostResponse =
  EncryptedMessage;

export type SecureSecureEncryptMessageApiV1EncryptMessagePostError = unknown;

export type SecureSecureDecryptMessageApiV1DecryptMessagePostData = {
  body: EncryptedMessage;
};

export type SecureSecureDecryptMessageApiV1DecryptMessagePostResponse = PlainMessage;

export type SecureSecureDecryptMessageApiV1DecryptMessagePostError = unknown;

export type TasksGetStatusApiV1TasksTaskIdGetData = {
  path: {
    task_id: string;
  };
};

export type TasksGetStatusApiV1TasksTaskIdGetResponse = TaskState;

export type TasksGetStatusApiV1TasksTaskIdGetError = unknown;

export type UsersCurrentApiV1UsersMeGetResponse =
  | UserReadAsAdmin
  | UserReadAsManager
  | UserRead;

export type UsersCurrentApiV1UsersMeGetError = unknown;

export type UsersListApiV1UsersGetData = {
  query?: {
    page?: number | null;
    size?: number | null;
  };
};

export type UsersListApiV1UsersGetResponse =
  | Paginated_UserReadAsAdmin_
  | Paginated_UserReadAsManager_;

export type UsersListApiV1UsersGetError = unknown;

export type UsersReadApiV1UsersUserIdGetData = {
  path: {
    user_id: unknown;
  };
};

export type UsersReadApiV1UsersUserIdGetResponse =
  | UserReadAsAdmin
  | UserReadAsManager
  | UserRead;

export type UsersReadApiV1UsersUserIdGetError = unknown;

export type UsersUpdateApiV1UsersUserIdPatchData = {
  body: UserUpdateAsAdmin | UserUpdateAsManager | UserUpdate;
  path: {
    user_id: unknown;
  };
};

export type UsersUpdateApiV1UsersUserIdPatchResponse =
  | UserReadAsAdmin
  | UserReadAsManager
  | UserRead;

export type UsersUpdateApiV1UsersUserIdPatchError = unknown;

export type UsersDeleteApiV1UsersUserIdDeleteData = {
  path: {
    user_id: unknown;
  };
};

export type UsersDeleteApiV1UsersUserIdDeleteResponse = unknown;

export type UsersDeleteApiV1UsersUserIdDeleteError = unknown;

export type UsersAddPrivilegesApiV1UsersUserIdPrivilegesAddPostData = {
  body: UserUpdatePrivileges;
  path: {
    user_id: unknown;
  };
};

export type UsersAddPrivilegesApiV1UsersUserIdPrivilegesAddPostResponse =
  | UserReadAsAdmin
  | UserReadAsManager;

export type UsersAddPrivilegesApiV1UsersUserIdPrivilegesAddPostError = unknown;

export type UsersRemovePrivilegesApiV1UsersUserIdPrivilegesRemovePostData = {
  body: UserUpdatePrivileges;
  path: {
    user_id: unknown;
  };
};

export type UsersRemovePrivilegesApiV1UsersUserIdPrivilegesRemovePostResponse =
  | UserReadAsAdmin
  | UserReadAsManager;

export type UsersRemovePrivilegesApiV1UsersUserIdPrivilegesRemovePostError = unknown;

export type ClientsListApiV1ClientsGetData = {
  query?: {
    page?: number | null;
    size?: number | null;
    user_id?: string | null;
  };
};

export type ClientsListApiV1ClientsGetResponse = Paginated_ClientRead_;

export type ClientsListApiV1ClientsGetError = unknown;

export type ClientsCreateApiV1ClientsPostData = {
  body: ClientCreate;
};

export type ClientsCreateApiV1ClientsPostResponse = ClientRead;

export type ClientsCreateApiV1ClientsPostError = unknown;

export type ClientsReadApiV1ClientsClientIdGetData = {
  path: {
    client_id: unknown;
  };
};

export type ClientsReadApiV1ClientsClientIdGetResponse = ClientRead;

export type ClientsReadApiV1ClientsClientIdGetError = unknown;

export type ClientsUpdateApiV1ClientsClientIdPatchData = {
  body: ClientUpdate;
  path: {
    client_id: unknown;
  };
};

export type ClientsUpdateApiV1ClientsClientIdPatchResponse = ClientRead;

export type ClientsUpdateApiV1ClientsClientIdPatchError = unknown;

export type ClientsDeleteApiV1ClientsClientIdDeleteData = {
  path: {
    client_id: unknown;
  };
};

export type ClientsDeleteApiV1ClientsClientIdDeleteResponse = ClientDelete;

export type ClientsDeleteApiV1ClientsClientIdDeleteError = unknown;

export type ClientsAssignUserApiV1ClientsClientIdAssignUserPostData = {
  body: UserClientCreate;
  path: {
    client_id: unknown;
  };
};

export type ClientsAssignUserApiV1ClientsClientIdAssignUserPostResponse =
  UserClientRead;

export type ClientsAssignUserApiV1ClientsClientIdAssignUserPostError = unknown;

export type ClientsRemoveUserApiV1ClientsClientIdRemoveUserPostData = {
  body: UserClientCreate;
  path: {
    client_id: unknown;
  };
};

export type ClientsRemoveUserApiV1ClientsClientIdRemoveUserPostResponse =
  UserClientRead;

export type ClientsRemoveUserApiV1ClientsClientIdRemoveUserPostError = unknown;

export type ClientsAssignWebsiteApiV1ClientsClientIdAssignWebsitePostData = {
  body: ClientWebsiteCreate;
  path: {
    client_id: unknown;
  };
};

export type ClientsAssignWebsiteApiV1ClientsClientIdAssignWebsitePostResponse =
  ClientWebsiteRead;

export type ClientsAssignWebsiteApiV1ClientsClientIdAssignWebsitePostError = unknown;

export type ClientsRemoveWebsiteApiV1ClientsClientIdRemoveWebsitePostData = {
  body: ClientWebsiteCreate;
  path: {
    client_id: unknown;
  };
};

export type ClientsRemoveWebsiteApiV1ClientsClientIdRemoveWebsitePostResponse =
  ClientWebsiteRead;

export type ClientsRemoveWebsiteApiV1ClientsClientIdRemoveWebsitePostError = unknown;

export type ClientReportsListApiV1ClientsReportsClientIdGetData = {
  path: {
    client_id: unknown;
  };
  query?: {
    page?: number | null;
    size?: number | null;
  };
};

export type ClientReportsListApiV1ClientsReportsClientIdGetResponse =
  Paginated_ClientReportRead_;

export type ClientReportsListApiV1ClientsReportsClientIdGetError = unknown;

export type ClientReportsCreateApiV1ClientsReportsClientIdPostData = {
  body: ClientReportCreate;
  path: {
    client_id: unknown;
  };
};

export type ClientReportsCreateApiV1ClientsReportsClientIdPostResponse =
  ClientReportRead;

export type ClientReportsCreateApiV1ClientsReportsClientIdPostError = unknown;

export type ClientReportsReadApiV1ClientsReportsClientIdReportIdGetData = {
  path: {
    client_id: unknown;
    report_id: unknown;
  };
};

export type ClientReportsReadApiV1ClientsReportsClientIdReportIdGetResponse =
  ClientReportRead;

export type ClientReportsReadApiV1ClientsReportsClientIdReportIdGetError = unknown;

export type ClientReportsUpdateApiV1ClientsReportsClientIdReportIdPatchData = {
  body: ClientReportUpdate;
  path: {
    client_id: unknown;
    report_id: unknown;
  };
};

export type ClientReportsUpdateApiV1ClientsReportsClientIdReportIdPatchResponse =
  ClientReportRead;

export type ClientReportsUpdateApiV1ClientsReportsClientIdReportIdPatchError = unknown;

export type ClientReportsDeleteApiV1ClientsReportsClientIdReportIdDeleteData = {
  path: {
    client_id: unknown;
    report_id: unknown;
  };
};

export type ClientReportsDeleteApiV1ClientsReportsClientIdReportIdDeleteResponse =
  unknown;

export type ClientReportsDeleteApiV1ClientsReportsClientIdReportIdDeleteError = unknown;

export type ClientReportNotesListApiV1ClientsReportsClientIdReportIdNotesGetData = {
  path: {
    client_id: unknown;
    report_id: unknown;
  };
  query?: {
    page?: number | null;
    size?: number | null;
  };
};

export type ClientReportNotesListApiV1ClientsReportsClientIdReportIdNotesGetResponse =
  Paginated_NoteRead_;

export type ClientReportNotesListApiV1ClientsReportsClientIdReportIdNotesGetError =
  unknown;

export type ClientReportNotesCreateApiV1ClientsReportsClientIdReportIdNotesPostData = {
  body: NoteCreate;
  path: {
    client_id: unknown;
    report_id: unknown;
  };
};

export type ClientReportNotesCreateApiV1ClientsReportsClientIdReportIdNotesPostResponse =
  NoteRead;

export type ClientReportNotesCreateApiV1ClientsReportsClientIdReportIdNotesPostError =
  unknown;

export type NotesListApiV1NotesGetData = {
  query?: {
    page?: number | null;
    size?: number | null;
    user_id?: string | null;
  };
};

export type NotesListApiV1NotesGetResponse = Paginated_NoteRead_;

export type NotesListApiV1NotesGetError = unknown;

export type NotesCreateApiV1NotesPostData = {
  body: NoteCreate;
};

export type NotesCreateApiV1NotesPostResponse = NoteRead;

export type NotesCreateApiV1NotesPostError = unknown;

export type NotesReadApiV1NotesNoteIdGetData = {
  path: {
    note_id: unknown;
  };
};

export type NotesReadApiV1NotesNoteIdGetResponse = NoteRead;

export type NotesReadApiV1NotesNoteIdGetError = unknown;

export type NotesUpdateApiV1NotesNoteIdPatchData = {
  body: NoteUpdate;
  path: {
    note_id: unknown;
  };
};

export type NotesUpdateApiV1NotesNoteIdPatchResponse = NoteRead;

export type NotesUpdateApiV1NotesNoteIdPatchError = unknown;

export type NotesDeleteApiV1NotesNoteIdDeleteData = {
  path: {
    note_id: unknown;
  };
};

export type NotesDeleteApiV1NotesNoteIdDeleteResponse = unknown;

export type NotesDeleteApiV1NotesNoteIdDeleteError = unknown;

export type BdxFeedListApiV1BdxGetData = {
  query?: {
    client_id?: string | null;
    page?: number | null;
    size?: number | null;
  };
};

export type BdxFeedListApiV1BdxGetResponse = Paginated_BdxFeedRead_;

export type BdxFeedListApiV1BdxGetError = unknown;

export type BdxFeedCreateApiV1BdxPostData = {
  body: BdxFeedCreate;
};

export type BdxFeedCreateApiV1BdxPostResponse = BdxFeedRead;

export type BdxFeedCreateApiV1BdxPostError = unknown;

export type BdxFeedReadApiV1BdxBdxIdGetData = {
  path: {
    bdx_id: unknown;
  };
};

export type BdxFeedReadApiV1BdxBdxIdGetResponse = BdxFeedRead;

export type BdxFeedReadApiV1BdxBdxIdGetError = unknown;

export type BdxFeedUpdateApiV1BdxBdxIdPatchData = {
  body: BdxFeedUpdate;
  path: {
    bdx_id: unknown;
  };
};

export type BdxFeedUpdateApiV1BdxBdxIdPatchResponse = BdxFeedRead;

export type BdxFeedUpdateApiV1BdxBdxIdPatchError = unknown;

export type BdxFeedDeleteApiV1BdxBdxIdDeleteData = {
  path: {
    bdx_id: unknown;
  };
};

export type BdxFeedDeleteApiV1BdxBdxIdDeleteResponse = unknown;

export type BdxFeedDeleteApiV1BdxBdxIdDeleteError = unknown;

export type SharpspringListApiV1SharpspringGetData = {
  query?: {
    client_id?: string | null;
    page?: number | null;
    size?: number | null;
    user_id?: string | null;
  };
};

export type SharpspringListApiV1SharpspringGetResponse = Paginated_SharpspringRead_;

export type SharpspringListApiV1SharpspringGetError = unknown;

export type SharpspringCreateApiV1SharpspringPostData = {
  body: SharpspringCreate;
};

export type SharpspringCreateApiV1SharpspringPostResponse = SharpspringRead;

export type SharpspringCreateApiV1SharpspringPostError = unknown;

export type SharpspringReadApiV1SharpspringSsIdGetData = {
  path: {
    ss_id: unknown;
  };
};

export type SharpspringReadApiV1SharpspringSsIdGetResponse = SharpspringRead;

export type SharpspringReadApiV1SharpspringSsIdGetError = unknown;

export type SharpspringUpdateApiV1SharpspringSsIdPatchData = {
  body: SharpspringUpdate;
  path: {
    ss_id: unknown;
  };
};

export type SharpspringUpdateApiV1SharpspringSsIdPatchResponse = SharpspringRead;

export type SharpspringUpdateApiV1SharpspringSsIdPatchError = unknown;

export type SharpspringDeleteApiV1SharpspringSsIdDeleteData = {
  path: {
    ss_id: unknown;
  };
};

export type SharpspringDeleteApiV1SharpspringSsIdDeleteResponse = unknown;

export type SharpspringDeleteApiV1SharpspringSsIdDeleteError = unknown;

export type GoCloudPropertyListApiV1GoCloudGetData = {
  query?: {
    client_id?: string | null;
    page?: number | null;
    size?: number | null;
  };
};

export type GoCloudPropertyListApiV1GoCloudGetResponse = Paginated_GoCloudPropertyRead_;

export type GoCloudPropertyListApiV1GoCloudGetError = unknown;

export type GoCloudPropertyCreateApiV1GoCloudPostData = {
  body: GoCloudPropertyCreate;
};

export type GoCloudPropertyCreateApiV1GoCloudPostResponse = GoCloudPropertyRead;

export type GoCloudPropertyCreateApiV1GoCloudPostError = unknown;

export type GoCloudPropertyReadApiV1GoCloudGoCloudIdGetData = {
  path: {
    go_cloud_id: unknown;
  };
};

export type GoCloudPropertyReadApiV1GoCloudGoCloudIdGetResponse = GoCloudPropertyRead;

export type GoCloudPropertyReadApiV1GoCloudGoCloudIdGetError = unknown;

export type GoCloudPropertyUpdateApiV1GoCloudGoCloudIdPatchData = {
  body: GoCloudPropertyUpdate;
  path: {
    go_cloud_id: unknown;
  };
};

export type GoCloudPropertyUpdateApiV1GoCloudGoCloudIdPatchResponse =
  GoCloudPropertyRead;

export type GoCloudPropertyUpdateApiV1GoCloudGoCloudIdPatchError = unknown;

export type GoCloudPropertyDeleteApiV1GoCloudGoCloudIdDeleteData = {
  path: {
    go_cloud_id: unknown;
  };
};

export type GoCloudPropertyDeleteApiV1GoCloudGoCloudIdDeleteResponse = unknown;

export type GoCloudPropertyDeleteApiV1GoCloudGoCloudIdDeleteError = unknown;

export type Ga4PropertyListApiV1Ga4PropertyGetData = {
  query?: {
    client_id?: string | null;
    page?: number | null;
    size?: number | null;
  };
};

export type Ga4PropertyListApiV1Ga4PropertyGetResponse =
  Paginated_GoAnalytics4PropertyRead_;

export type Ga4PropertyListApiV1Ga4PropertyGetError = unknown;

export type Ga4PropertyCreateApiV1Ga4PropertyPostData = {
  body: GoAnalytics4PropertyCreate;
};

export type Ga4PropertyCreateApiV1Ga4PropertyPostResponse = GoAnalytics4PropertyRead;

export type Ga4PropertyCreateApiV1Ga4PropertyPostError = unknown;

export type Ga4PropertyReadApiV1Ga4PropertyGa4IdGetData = {
  path: {
    ga4_id: unknown;
  };
};

export type Ga4PropertyReadApiV1Ga4PropertyGa4IdGetResponse = GoAnalytics4PropertyRead;

export type Ga4PropertyReadApiV1Ga4PropertyGa4IdGetError = unknown;

export type Ga4PropertyUpdateApiV1Ga4PropertyGa4IdPatchData = {
  body: GoAnalytics4PropertyUpdate;
  path: {
    ga4_id: unknown;
  };
};

export type Ga4PropertyUpdateApiV1Ga4PropertyGa4IdPatchResponse =
  GoAnalytics4PropertyRead;

export type Ga4PropertyUpdateApiV1Ga4PropertyGa4IdPatchError = unknown;

export type Ga4PropertyDeleteApiV1Ga4PropertyGa4IdDeleteData = {
  path: {
    ga4_id: unknown;
  };
};

export type Ga4PropertyDeleteApiV1Ga4PropertyGa4IdDeleteResponse = unknown;

export type Ga4PropertyDeleteApiV1Ga4PropertyGa4IdDeleteError = unknown;

export type Ga4StreamListApiV1Ga4StreamGetData = {
  query?: {
    ga4_id?: string | null;
    page?: number | null;
    size?: number | null;
    website_id?: string | null;
  };
};

export type Ga4StreamListApiV1Ga4StreamGetResponse = Paginated_GoAnalytics4StreamRead_;

export type Ga4StreamListApiV1Ga4StreamGetError = unknown;

export type Ga4StreamCreateApiV1Ga4StreamPostData = {
  body: GoAnalytics4StreamCreate;
};

export type Ga4StreamCreateApiV1Ga4StreamPostResponse = GoAnalytics4StreamRead;

export type Ga4StreamCreateApiV1Ga4StreamPostError = unknown;

export type Ga4StreamReadApiV1Ga4StreamGa4StreamIdGetData = {
  path: {
    ga4_stream_id: unknown;
  };
};

export type Ga4StreamReadApiV1Ga4StreamGa4StreamIdGetResponse = GoAnalytics4StreamRead;

export type Ga4StreamReadApiV1Ga4StreamGa4StreamIdGetError = unknown;

export type Ga4StreamUpdateApiV1Ga4StreamGa4StreamIdPatchData = {
  body: GoAnalytics4StreamUpdate;
  path: {
    ga4_stream_id: unknown;
  };
};

export type Ga4StreamUpdateApiV1Ga4StreamGa4StreamIdPatchResponse =
  GoAnalytics4StreamRead;

export type Ga4StreamUpdateApiV1Ga4StreamGa4StreamIdPatchError = unknown;

export type Ga4StreamDeleteApiV1Ga4StreamGa4StreamIdDeleteData = {
  path: {
    ga4_stream_id: unknown;
  };
};

export type Ga4StreamDeleteApiV1Ga4StreamGa4StreamIdDeleteResponse = unknown;

export type Ga4StreamDeleteApiV1Ga4StreamGa4StreamIdDeleteError = unknown;

export type GoSearchConsolePropertyListApiV1GoSearchPropertyGetData = {
  query?: {
    client_id?: string | null;
    page?: number | null;
    size?: number | null;
    website_id?: string | null;
  };
};

export type GoSearchConsolePropertyListApiV1GoSearchPropertyGetResponse =
  Paginated_GoSearchConsolePropertyRead_;

export type GoSearchConsolePropertyListApiV1GoSearchPropertyGetError = unknown;

export type GoSearchConsolePropertyCreateApiV1GoSearchPropertyPostData = {
  body: GoSearchConsolePropertyCreate;
};

export type GoSearchConsolePropertyCreateApiV1GoSearchPropertyPostResponse =
  GoSearchConsolePropertyRead;

export type GoSearchConsolePropertyCreateApiV1GoSearchPropertyPostError = unknown;

export type GoSearchConsolePropertyReadApiV1GoSearchPropertyGscIdGetData = {
  path: {
    gsc_id: unknown;
  };
};

export type GoSearchConsolePropertyReadApiV1GoSearchPropertyGscIdGetResponse =
  GoSearchConsolePropertyRead;

export type GoSearchConsolePropertyReadApiV1GoSearchPropertyGscIdGetError = unknown;

export type GoSearchConsolePropertyUpdateApiV1GoSearchPropertyGscIdPatchData = {
  body: GoSearchConsolePropertyUpdate;
  path: {
    gsc_id: unknown;
  };
};

export type GoSearchConsolePropertyUpdateApiV1GoSearchPropertyGscIdPatchResponse =
  GoSearchConsolePropertyRead;

export type GoSearchConsolePropertyUpdateApiV1GoSearchPropertyGscIdPatchError = unknown;

export type GoSearchConsolePropertyDeleteApiV1GoSearchPropertyGscIdDeleteData = {
  path: {
    gsc_id: unknown;
  };
};

export type GoSearchConsolePropertyDeleteApiV1GoSearchPropertyGscIdDeleteResponse =
  unknown;

export type GoSearchConsolePropertyDeleteApiV1GoSearchPropertyGscIdDeleteError =
  unknown;

export type GoSearchConsolePropertyMetricListAllMetricTypesApiV1GoSearchMetricGscIdGetData =
  {
    path: {
      gsc_id: unknown;
    };
    query?: {
      date_end?: string | null;
      date_start?: string | null;
      metric_types?: string | null;
      page?: number | null;
      size?: number | null;
    };
  };

export type GoSearchConsolePropertyMetricListAllMetricTypesApiV1GoSearchMetricGscIdGetResponse =
  GoSearchConsoleMetricPages;

export type GoSearchConsolePropertyMetricListAllMetricTypesApiV1GoSearchMetricGscIdGetError =
  unknown;

export type GoSearchConsolePropertyMetricListByMetricTypeApiV1GoSearchMetricGscIdMetricTypeGetData =
  {
    path: {
      gsc_id: unknown;
      metric_type: GoSearchConsoleMetricType;
    };
    query?: {
      date_end?: string | null;
      date_start?: string | null;
      metric_types?: string | null;
      page?: number | null;
      size?: number | null;
    };
  };

export type GoSearchConsolePropertyMetricListByMetricTypeApiV1GoSearchMetricGscIdMetricTypeGetResponse =
  Paginated_GoSearchConsoleMetricRead_;

export type GoSearchConsolePropertyMetricListByMetricTypeApiV1GoSearchMetricGscIdMetricTypeGetError =
  unknown;

export type GoSearchConsolePropertyMetricCreateApiV1GoSearchMetricGscIdMetricTypePostData =
  {
    body: GoSearchConsoleMetricCreate;
    path: {
      gsc_id: unknown;
      metric_type: GoSearchConsoleMetricType;
    };
  };

export type GoSearchConsolePropertyMetricCreateApiV1GoSearchMetricGscIdMetricTypePostResponse =
  GoSearchConsoleMetricRead;

export type GoSearchConsolePropertyMetricCreateApiV1GoSearchMetricGscIdMetricTypePostError =
  unknown;

export type GoSearchConsolePropertyMetricReadApiV1GoSearchMetricGscIdMetricTypeMetricIdGetData =
  {
    path: {
      gsc_id: unknown;
      metric_id: unknown;
      metric_type: GoSearchConsoleMetricType;
    };
  };

export type GoSearchConsolePropertyMetricReadApiV1GoSearchMetricGscIdMetricTypeMetricIdGetResponse =
  GoSearchConsoleMetricRead;

export type GoSearchConsolePropertyMetricReadApiV1GoSearchMetricGscIdMetricTypeMetricIdGetError =
  unknown;

export type GoSearchConsolePropertyMetricUpdateApiV1GoSearchMetricGscIdMetricTypeMetricIdPatchData =
  {
    body: GoSearchConsoleMetricUpdate;
    path: {
      gsc_id: unknown;
      metric_id: unknown;
      metric_type: GoSearchConsoleMetricType;
    };
  };

export type GoSearchConsolePropertyMetricUpdateApiV1GoSearchMetricGscIdMetricTypeMetricIdPatchResponse =
  GoSearchConsoleMetricRead;

export type GoSearchConsolePropertyMetricUpdateApiV1GoSearchMetricGscIdMetricTypeMetricIdPatchError =
  unknown;

export type GoSearchConsolePropertyMetricDeleteApiV1GoSearchMetricGscIdMetricTypeMetricIdDeleteData =
  {
    path: {
      gsc_id: unknown;
      metric_id: unknown;
      metric_type: GoSearchConsoleMetricType;
    };
  };

export type GoSearchConsolePropertyMetricDeleteApiV1GoSearchMetricGscIdMetricTypeMetricIdDeleteResponse =
  unknown;

export type GoSearchConsolePropertyMetricDeleteApiV1GoSearchMetricGscIdMetricTypeMetricIdDeleteError =
  unknown;

export type WebsitesListApiV1WebsitesGetData = {
  query?: {
    client_id?: string | null;
    page?: number | null;
    size?: number | null;
    website_id?: string | null;
  };
};

export type WebsitesListApiV1WebsitesGetResponse = Paginated_WebsiteRead_;

export type WebsitesListApiV1WebsitesGetError = unknown;

export type WebsitesCreateApiV1WebsitesPostData = {
  body: WebsiteCreate;
};

export type WebsitesCreateApiV1WebsitesPostResponse = WebsiteRead;

export type WebsitesCreateApiV1WebsitesPostError = unknown;

export type WebsitesReadApiV1WebsitesWebsiteIdGetData = {
  path: {
    website_id: unknown;
  };
};

export type WebsitesReadApiV1WebsitesWebsiteIdGetResponse = WebsiteRead;

export type WebsitesReadApiV1WebsitesWebsiteIdGetError = unknown;

export type WebsitesUpdateApiV1WebsitesWebsiteIdPatchData = {
  body: WebsiteUpdate;
  path: {
    website_id: unknown;
  };
};

export type WebsitesUpdateApiV1WebsitesWebsiteIdPatchResponse = WebsiteRead;

export type WebsitesUpdateApiV1WebsitesWebsiteIdPatchError = unknown;

export type WebsitesDeleteApiV1WebsitesWebsiteIdDeleteData = {
  path: {
    website_id: unknown;
  };
};

export type WebsitesDeleteApiV1WebsitesWebsiteIdDeleteResponse = unknown;

export type WebsitesDeleteApiV1WebsitesWebsiteIdDeleteError = unknown;

export type WebsitePagesListApiV1WebpagesGetData = {
  query?: {
    page?: number | null;
    sitemap_id?: string | null;
    size?: number | null;
    website_id?: string | null;
  };
};

export type WebsitePagesListApiV1WebpagesGetResponse = Paginated_WebsitePageRead_;

export type WebsitePagesListApiV1WebpagesGetError = unknown;

export type WebsitePagesCreateApiV1WebpagesPostData = {
  body: WebsitePageCreate;
};

export type WebsitePagesCreateApiV1WebpagesPostResponse = WebsitePageRead;

export type WebsitePagesCreateApiV1WebpagesPostError = unknown;

export type WebsitePagesReadApiV1WebpagesPageIdGetData = {
  path: {
    page_id: unknown;
  };
};

export type WebsitePagesReadApiV1WebpagesPageIdGetResponse = WebsitePageRead;

export type WebsitePagesReadApiV1WebpagesPageIdGetError = unknown;

export type WebsitePagesUpdateApiV1WebpagesPageIdPatchData = {
  body: WebsitePageUpdate;
  path: {
    page_id: unknown;
  };
};

export type WebsitePagesUpdateApiV1WebpagesPageIdPatchResponse = WebsitePageRead;

export type WebsitePagesUpdateApiV1WebpagesPageIdPatchError = unknown;

export type WebsitePagesDeleteApiV1WebpagesPageIdDeleteData = {
  path: {
    page_id: unknown;
  };
};

export type WebsitePagesDeleteApiV1WebpagesPageIdDeleteResponse = unknown;

export type WebsitePagesDeleteApiV1WebpagesPageIdDeleteError = unknown;

export type WebsitePagesProcessWebsitePageSpeedInsightsApiV1WebpagesPageIdProcessPsiPostData =
  {
    path: {
      page_id: unknown;
    };
  };

export type WebsitePagesProcessWebsitePageSpeedInsightsApiV1WebpagesPageIdProcessPsiPostResponse =
  WebsitePagePSIProcessing;

export type WebsitePagesProcessWebsitePageSpeedInsightsApiV1WebpagesPageIdProcessPsiPostError =
  unknown;

export type WebsiteSitemapsListApiV1SitemapsGetData = {
  query?: {
    page?: number | null;
    sitemap_id?: string | null;
    size?: number | null;
    website_id?: string | null;
  };
};

export type WebsiteSitemapsListApiV1SitemapsGetResponse = Paginated_WebsiteMapRead_;

export type WebsiteSitemapsListApiV1SitemapsGetError = unknown;

export type WebsiteSitemapsCreateApiV1SitemapsPostData = {
  body: WebsiteMapCreate;
};

export type WebsiteSitemapsCreateApiV1SitemapsPostResponse = WebsiteMapRead;

export type WebsiteSitemapsCreateApiV1SitemapsPostError = unknown;

export type WebsiteSitemapsReadApiV1SitemapsSitemapIdGetData = {
  path: {
    sitemap_id: unknown;
  };
};

export type WebsiteSitemapsReadApiV1SitemapsSitemapIdGetResponse = WebsiteMapRead;

export type WebsiteSitemapsReadApiV1SitemapsSitemapIdGetError = unknown;

export type WebsiteSitemapsUpdateApiV1SitemapsSitemapIdPatchData = {
  body: WebsiteMapUpdate;
  path: {
    sitemap_id: unknown;
  };
};

export type WebsiteSitemapsUpdateApiV1SitemapsSitemapIdPatchResponse = WebsiteMapRead;

export type WebsiteSitemapsUpdateApiV1SitemapsSitemapIdPatchError = unknown;

export type WebsiteSitemapsDeleteApiV1SitemapsSitemapIdDeleteData = {
  path: {
    sitemap_id: unknown;
  };
};

export type WebsiteSitemapsDeleteApiV1SitemapsSitemapIdDeleteResponse = unknown;

export type WebsiteSitemapsDeleteApiV1SitemapsSitemapIdDeleteError = unknown;

export type WebsiteSitemapsProcessSitemapPagesApiV1SitemapsSitemapIdProcessPagesGetData =
  {
    path: {
      sitemap_id: unknown;
    };
  };

export type WebsiteSitemapsProcessSitemapPagesApiV1SitemapsSitemapIdProcessPagesGetResponse =
  WebsiteMapProcessing;

export type WebsiteSitemapsProcessSitemapPagesApiV1SitemapsSitemapIdProcessPagesGetError =
  unknown;

export type WebsitePageSpeedInsightsListApiV1PsiGetData = {
  query?: {
    page?: number | null;
    page_id?: string | null;
    size?: number | null;
    strategy?: Array<string> | null;
    website_id?: string | null;
  };
};

export type WebsitePageSpeedInsightsListApiV1PsiGetResponse =
  Paginated_WebsitePageSpeedInsightsRead_;

export type WebsitePageSpeedInsightsListApiV1PsiGetError = unknown;

export type WebsitePageSpeedInsightsCreateApiV1PsiPostData = {
  body: WebsitePageSpeedInsightsBase;
  query?: {
    page?: number | null;
    page_id?: string | null;
    size?: number | null;
    strategy?: Array<string> | null;
    website_id?: string | null;
  };
};

export type WebsitePageSpeedInsightsCreateApiV1PsiPostResponse =
  WebsitePageSpeedInsightsRead;

export type WebsitePageSpeedInsightsCreateApiV1PsiPostError = unknown;

export type WebsitePageSpeedInsightsReadApiV1PsiPsiIdGetData = {
  path: {
    psi_id: unknown;
  };
};

export type WebsitePageSpeedInsightsReadApiV1PsiPsiIdGetResponse =
  WebsitePageSpeedInsightsRead;

export type WebsitePageSpeedInsightsReadApiV1PsiPsiIdGetError = unknown;

export type WebsitePageSpeedInsightsDeleteApiV1PsiPsiIdDeleteData = {
  path: {
    psi_id: unknown;
  };
};

export type WebsitePageSpeedInsightsDeleteApiV1PsiPsiIdDeleteResponse = unknown;

export type WebsitePageSpeedInsightsDeleteApiV1PsiPsiIdDeleteError = unknown;

export type WebsitePageKeywordCorpusListApiV1KwcGetData = {
  query?: {
    page?: number | null;
    page_id?: string | null;
    size?: number | null;
    website_id?: string | null;
  };
};

export type WebsitePageKeywordCorpusListApiV1KwcGetResponse =
  Paginated_WebsiteKeywordCorpusRead_;

export type WebsitePageKeywordCorpusListApiV1KwcGetError = unknown;

export type WebsitePageKeywordCorpusCreateApiV1KwcPostData = {
  body: WebsiteKeywordCorpusCreate;
};

export type WebsitePageKeywordCorpusCreateApiV1KwcPostResponse =
  WebsiteKeywordCorpusRead;

export type WebsitePageKeywordCorpusCreateApiV1KwcPostError = unknown;

export type WebsitePageKeywordCorpusReadApiV1KwcKwcIdGetData = {
  path: {
    kwc_id: unknown;
  };
};

export type WebsitePageKeywordCorpusReadApiV1KwcKwcIdGetResponse =
  WebsiteKeywordCorpusRead;

export type WebsitePageKeywordCorpusReadApiV1KwcKwcIdGetError = unknown;

export type WebsitePageKeywordCorpusDeleteApiV1KwcKwcIdDeleteData = {
  path: {
    kwc_id: unknown;
  };
};

export type WebsitePageKeywordCorpusDeleteApiV1KwcKwcIdDeleteResponse = unknown;

export type WebsitePageKeywordCorpusDeleteApiV1KwcKwcIdDeleteError = unknown;

export type $OpenApiTs = {
  '/api/v1/status': {
    get: {
      req: PublicStatusApiV1StatusGetData;
      res: {
        /**
         * Successful Response
         */
        '200': {
          [key: string]: unknown;
        };
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/rate-limited-multiple': {
    get: {
      req: PublicRateLimitedMultipleApiV1RateLimitedMultipleGetData;
      res: {
        /**
         * Successful Response
         */
        '200': {
          [key: string]: unknown;
        };
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/test-scope': {
    get: {
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
      };
    };
  };
  '/api/v1/csrf': {
    get: {
      res: {
        /**
         * Successful Response
         */
        '200': CsrfToken;
      };
    };
    post: {
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
      };
    };
  };
  '/api/v1/encrypt/message': {
    post: {
      req: SecureSecureEncryptMessageApiV1EncryptMessagePostData;
      res: {
        /**
         * Successful Response
         */
        '200': EncryptedMessage;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/decrypt/message': {
    post: {
      req: SecureSecureDecryptMessageApiV1DecryptMessagePostData;
      res: {
        /**
         * Successful Response
         */
        '200': PlainMessage;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/tasks/{task_id}': {
    get: {
      req: TasksGetStatusApiV1TasksTaskIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': TaskState;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/users/me': {
    get: {
      res: {
        /**
         * Successful Response
         */
        '200': UserReadAsAdmin | UserReadAsManager | UserRead;
      };
    };
  };
  '/api/v1/users/': {
    get: {
      req: UsersListApiV1UsersGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_UserReadAsAdmin_ | Paginated_UserReadAsManager_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/users/{user_id}': {
    get: {
      req: UsersReadApiV1UsersUserIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': UserReadAsAdmin | UserReadAsManager | UserRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: UsersUpdateApiV1UsersUserIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': UserReadAsAdmin | UserReadAsManager | UserRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: UsersDeleteApiV1UsersUserIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/users/{user_id}/privileges/add': {
    post: {
      req: UsersAddPrivilegesApiV1UsersUserIdPrivilegesAddPostData;
      res: {
        /**
         * Successful Response
         */
        '200': UserReadAsAdmin | UserReadAsManager;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/users/{user_id}/privileges/remove': {
    post: {
      req: UsersRemovePrivilegesApiV1UsersUserIdPrivilegesRemovePostData;
      res: {
        /**
         * Successful Response
         */
        '200': UserReadAsAdmin | UserReadAsManager;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/': {
    get: {
      req: ClientsListApiV1ClientsGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_ClientRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: ClientsCreateApiV1ClientsPostData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/{client_id}': {
    get: {
      req: ClientsReadApiV1ClientsClientIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientRead;
        /**
         * Not Found
         */
        '404': ErrorModel;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: ClientsUpdateApiV1ClientsClientIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: ClientsDeleteApiV1ClientsClientIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientDelete;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/{client_id}/assign/user': {
    post: {
      req: ClientsAssignUserApiV1ClientsClientIdAssignUserPostData;
      res: {
        /**
         * Successful Response
         */
        '200': UserClientRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/{client_id}/remove/user': {
    post: {
      req: ClientsRemoveUserApiV1ClientsClientIdRemoveUserPostData;
      res: {
        /**
         * Successful Response
         */
        '200': UserClientRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/{client_id}/assign/website': {
    post: {
      req: ClientsAssignWebsiteApiV1ClientsClientIdAssignWebsitePostData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientWebsiteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/{client_id}/remove/website': {
    post: {
      req: ClientsRemoveWebsiteApiV1ClientsClientIdRemoveWebsitePostData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientWebsiteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/reports/{client_id}': {
    get: {
      req: ClientReportsListApiV1ClientsReportsClientIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_ClientReportRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: ClientReportsCreateApiV1ClientsReportsClientIdPostData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientReportRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/reports/{client_id}/{report_id}': {
    get: {
      req: ClientReportsReadApiV1ClientsReportsClientIdReportIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientReportRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: ClientReportsUpdateApiV1ClientsReportsClientIdReportIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': ClientReportRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: ClientReportsDeleteApiV1ClientsReportsClientIdReportIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/clients/reports/{client_id}/{report_id}/notes': {
    get: {
      req: ClientReportNotesListApiV1ClientsReportsClientIdReportIdNotesGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_NoteRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: ClientReportNotesCreateApiV1ClientsReportsClientIdReportIdNotesPostData;
      res: {
        /**
         * Successful Response
         */
        '200': NoteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/notes/': {
    get: {
      req: NotesListApiV1NotesGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_NoteRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: NotesCreateApiV1NotesPostData;
      res: {
        /**
         * Successful Response
         */
        '200': NoteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/notes/{note_id}': {
    get: {
      req: NotesReadApiV1NotesNoteIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': NoteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: NotesUpdateApiV1NotesNoteIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': NoteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: NotesDeleteApiV1NotesNoteIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/bdx/': {
    get: {
      req: BdxFeedListApiV1BdxGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_BdxFeedRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: BdxFeedCreateApiV1BdxPostData;
      res: {
        /**
         * Successful Response
         */
        '200': BdxFeedRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/bdx/{bdx_id}': {
    get: {
      req: BdxFeedReadApiV1BdxBdxIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': BdxFeedRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: BdxFeedUpdateApiV1BdxBdxIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': BdxFeedRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: BdxFeedDeleteApiV1BdxBdxIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/sharpspring/': {
    get: {
      req: SharpspringListApiV1SharpspringGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_SharpspringRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: SharpspringCreateApiV1SharpspringPostData;
      res: {
        /**
         * Successful Response
         */
        '200': SharpspringRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/sharpspring/{ss_id}': {
    get: {
      req: SharpspringReadApiV1SharpspringSsIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': SharpspringRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: SharpspringUpdateApiV1SharpspringSsIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': SharpspringRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: SharpspringDeleteApiV1SharpspringSsIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/go/cloud/': {
    get: {
      req: GoCloudPropertyListApiV1GoCloudGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_GoCloudPropertyRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: GoCloudPropertyCreateApiV1GoCloudPostData;
      res: {
        /**
         * Successful Response
         */
        '200': GoCloudPropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/go/cloud/{go_cloud_id}': {
    get: {
      req: GoCloudPropertyReadApiV1GoCloudGoCloudIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': GoCloudPropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: GoCloudPropertyUpdateApiV1GoCloudGoCloudIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': GoCloudPropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: GoCloudPropertyDeleteApiV1GoCloudGoCloudIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/ga4/property/': {
    get: {
      req: Ga4PropertyListApiV1Ga4PropertyGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_GoAnalytics4PropertyRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: Ga4PropertyCreateApiV1Ga4PropertyPostData;
      res: {
        /**
         * Successful Response
         */
        '200': GoAnalytics4PropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/ga4/property/{ga4_id}': {
    get: {
      req: Ga4PropertyReadApiV1Ga4PropertyGa4IdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': GoAnalytics4PropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: Ga4PropertyUpdateApiV1Ga4PropertyGa4IdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': GoAnalytics4PropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: Ga4PropertyDeleteApiV1Ga4PropertyGa4IdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/ga4/stream/': {
    get: {
      req: Ga4StreamListApiV1Ga4StreamGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_GoAnalytics4StreamRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: Ga4StreamCreateApiV1Ga4StreamPostData;
      res: {
        /**
         * Successful Response
         */
        '200': GoAnalytics4StreamRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/ga4/stream/{ga4_stream_id}': {
    get: {
      req: Ga4StreamReadApiV1Ga4StreamGa4StreamIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': GoAnalytics4StreamRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: Ga4StreamUpdateApiV1Ga4StreamGa4StreamIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': GoAnalytics4StreamRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: Ga4StreamDeleteApiV1Ga4StreamGa4StreamIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/go/search/property/': {
    get: {
      req: GoSearchConsolePropertyListApiV1GoSearchPropertyGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_GoSearchConsolePropertyRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: GoSearchConsolePropertyCreateApiV1GoSearchPropertyPostData;
      res: {
        /**
         * Successful Response
         */
        '200': GoSearchConsolePropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/go/search/property/{gsc_id}': {
    get: {
      req: GoSearchConsolePropertyReadApiV1GoSearchPropertyGscIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': GoSearchConsolePropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: GoSearchConsolePropertyUpdateApiV1GoSearchPropertyGscIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': GoSearchConsolePropertyRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: GoSearchConsolePropertyDeleteApiV1GoSearchPropertyGscIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/go/search/metric/{gsc_id}': {
    get: {
      req: GoSearchConsolePropertyMetricListAllMetricTypesApiV1GoSearchMetricGscIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': GoSearchConsoleMetricPages;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/go/search/metric/{gsc_id}/{metric_type}': {
    get: {
      req: GoSearchConsolePropertyMetricListByMetricTypeApiV1GoSearchMetricGscIdMetricTypeGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_GoSearchConsoleMetricRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: GoSearchConsolePropertyMetricCreateApiV1GoSearchMetricGscIdMetricTypePostData;
      res: {
        /**
         * Successful Response
         */
        '200': GoSearchConsoleMetricRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/go/search/metric/{gsc_id}/{metric_type}/{metric_id}': {
    get: {
      req: GoSearchConsolePropertyMetricReadApiV1GoSearchMetricGscIdMetricTypeMetricIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': GoSearchConsoleMetricRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: GoSearchConsolePropertyMetricUpdateApiV1GoSearchMetricGscIdMetricTypeMetricIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': GoSearchConsoleMetricRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: GoSearchConsolePropertyMetricDeleteApiV1GoSearchMetricGscIdMetricTypeMetricIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/websites/': {
    get: {
      req: WebsitesListApiV1WebsitesGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_WebsiteRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: WebsitesCreateApiV1WebsitesPostData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/websites/{website_id}': {
    get: {
      req: WebsitesReadApiV1WebsitesWebsiteIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: WebsitesUpdateApiV1WebsitesWebsiteIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: WebsitesDeleteApiV1WebsitesWebsiteIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/webpages/': {
    get: {
      req: WebsitePagesListApiV1WebpagesGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_WebsitePageRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: WebsitePagesCreateApiV1WebpagesPostData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsitePageRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/webpages/{page_id}': {
    get: {
      req: WebsitePagesReadApiV1WebpagesPageIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsitePageRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: WebsitePagesUpdateApiV1WebpagesPageIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsitePageRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: WebsitePagesDeleteApiV1WebpagesPageIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/webpages/{page_id}/process-psi': {
    post: {
      req: WebsitePagesProcessWebsitePageSpeedInsightsApiV1WebpagesPageIdProcessPsiPostData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsitePagePSIProcessing;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/sitemaps/': {
    get: {
      req: WebsiteSitemapsListApiV1SitemapsGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_WebsiteMapRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: WebsiteSitemapsCreateApiV1SitemapsPostData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteMapRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/sitemaps/{sitemap_id}': {
    get: {
      req: WebsiteSitemapsReadApiV1SitemapsSitemapIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteMapRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    patch: {
      req: WebsiteSitemapsUpdateApiV1SitemapsSitemapIdPatchData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteMapRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: WebsiteSitemapsDeleteApiV1SitemapsSitemapIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/sitemaps/{sitemap_id}/process-pages': {
    get: {
      req: WebsiteSitemapsProcessSitemapPagesApiV1SitemapsSitemapIdProcessPagesGetData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteMapProcessing;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/psi/': {
    get: {
      req: WebsitePageSpeedInsightsListApiV1PsiGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_WebsitePageSpeedInsightsRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: WebsitePageSpeedInsightsCreateApiV1PsiPostData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsitePageSpeedInsightsRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/psi/{psi_id}': {
    get: {
      req: WebsitePageSpeedInsightsReadApiV1PsiPsiIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsitePageSpeedInsightsRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: WebsitePageSpeedInsightsDeleteApiV1PsiPsiIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/kwc/': {
    get: {
      req: WebsitePageKeywordCorpusListApiV1KwcGetData;
      res: {
        /**
         * Successful Response
         */
        '200': Paginated_WebsiteKeywordCorpusRead_;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    post: {
      req: WebsitePageKeywordCorpusCreateApiV1KwcPostData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteKeywordCorpusRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
  '/api/v1/kwc/{kwc_id}': {
    get: {
      req: WebsitePageKeywordCorpusReadApiV1KwcKwcIdGetData;
      res: {
        /**
         * Successful Response
         */
        '200': WebsiteKeywordCorpusRead;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
    delete: {
      req: WebsitePageKeywordCorpusDeleteApiV1KwcKwcIdDeleteData;
      res: {
        /**
         * Successful Response
         */
        '200': unknown;
        /**
         * Validation Error
         */
        '422': HTTPValidationError;
      };
    };
  };
};
